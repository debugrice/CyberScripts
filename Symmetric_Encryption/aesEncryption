from Crypto.Random import get_random_bytes
from Crypto.Protocol.KDF import PBKDF2

from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad

# simple_key = get_random_bytes(32)
# print(simple_key)
salt = "b'\xc2\xa2<\x1a\x1a\xe7\x05_lb\xcc\xdey%A\xc723\x1dL\xd7\xd1e\xf8\xcc8\xa5\xd5\xe5\xddpH'"
password = "mypassword"

message = b"hello secret world!"

key = PBKDF2(password, salt, dkLen=32)
cipher = AES.new(key, AES.MODE_CBC)

ciphered_data = cipher.encrypt(pad(message, AES.block_size))
print(ciphered_data)

with open('encrypted.bin', 'wb') as f:
    f.write(cipher.iv)
    f.write(ciphered_data)

with open('encrypted.bin', 'rb') as f:
    iv = f.read(16)
    decrypt_data = f.read()

cipher = AES.new(key, AES.MODE_CBC, iv=iv)
original = unpad(cipher.decrypt(decrypt_data), AES.block_size)
print(original)


with open('key.bin', 'wb') as f:
    f.write(key)